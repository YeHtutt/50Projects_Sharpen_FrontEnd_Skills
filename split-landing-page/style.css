@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');

:root {
    --left-bg-color: rgba(87, 84, 236, 0.7);
    --right-bg-color: rgba(43, 43, 43, 0.8);
    --left-btn-hover-color: rgba(87, 84, 236, 1);
    --right-btn-hover-color: rgba(28,122,28, 1);
    --hover-width: 75%;
    --other-width: 25%;
    --speed: 1000ms;
;}

/*universal selector*/
* {
    box-sizing: border-box;
}

body {
    font-family: 'Roboto', sans-serif;
    margin: 0;
    height: 100vh;
    overflow: hidden;
}

h1 {
    font-size: 4rem;
    color: #fff;
    position: absolute;
    left: 50%;
    top: 20%;
    transform: translateX(-50%);
    white-space: nowrap; /*thie title doesn't wrap*/
}

.btn {
    position: absolute;
    left: 50%;
    top: 40%;
    transform: translateX(-50%);
    display: flex;
    justify-content: center;
    align-items: center;
    text-decoration: none;
    color: #fff;
    border: #fff solid 0.2rem;
    font-size: 1rem;
    font-weight: bold;
    text-transform: uppercase;
    width: 15rem;
    padding: 1.5rem;
}

.container {
    position: relative;
    width: 100%;
    height: 100%;
    background: #333;
}

.split {
    position: absolute;
    width: 50%;
    height: 100%;
    overflow: hidden;
}

.split.left {
    left: 0;
    background: url(ps.jpg);
    background-repeat: no-repeat;
    background-size: cover;
}

.split.left::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: var(--left-bg-color);
}

.split.left .btn:hover {
    background-color: var(--left-btn-hover-color);
    border-color: var(--left-bg-color);
}

.split.right {
    right: 0;
    background: url(xbox.jpg);
    background-repeat: no-repeat;
    background-size: cover;
}

.split.right::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: var(--right-bg-color);
}

.split.right .btn:hover {
    background-color: var(--right-btn-hover-color);
    border-color: var(--right-bg-color);
}

/*
 these selectors are grouped together and share the same transition property
 -- the transition starts slowly, accelerates in the middle, 
 and slows down again at the end, transition duration is 1 second
*/
.split.right,
.split.left,
.split.right::before,
.split.left::before {
    transition: all var(--speed) ease-in-out;
}

/*If "hover-left" apply to the left-box,
    the left-box width takes 75% of the container total width -> left-box gets bigger
*/
.hover-left .left {
    width: var(--hover-width); 
    cursor: pointer;
}

/*If "hover-left" apply to the left-box,
    the right-box width takes only 25% of the container total width -> right-box gets smaller
*/
.hover-left .right {
    width: var(--other-width); /*25% of the container width*/
}

/*If "hover-right" apply to the right-box,
    the right-box width takes 75% of the container total width -> right-box gets bigger
*/
.hover-right .right {
    width: var(--hover-width);
    cursor: pointer;
}

/*If "hover-right" apply to the right-box,
    the left-box width takes only 25% of the container total width -> left-box gets smaller
*/
.hover-right .left {
    width: var(--other-width);
}

@media (max-width: 800px) {
    h1 {
        font-size: 2rem;
        top: 30%;
    }

    .btn {
        padding: 1.2rem;
        width: 12rem;
    }
}